//  @ts-nocheck
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useChannel, useEvent } from '@harelpls/use-pusher';
import { useEffect, useRef, useState } from 'react';
import { pdfjs, Document, Page } from 'react-pdf';
pdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;

const Home: NextPage = () => {
    const channel = useChannel('my-channel');
    const [message, setMessages] = useState([
        'Aufgabe A',
        'Aufgabe B',
        'Aufgabe C',
    ]);
    const [resource, setResources] = useState(['']);

    const [numPages, setNumPages] = useState(1);
    const [pageNumber, setPageNumber] = useState(1);

    useEvent(channel, 'resources', ({ data }) => {
        console.log('recieved resources', data);
        setResources(() => [...data]);
    });
    useEvent(channel, 'tasks', ({ data }) => {
        console.log('recieved ', data);
        setMessages(() => [...data]);
    });

    function onDocumentLoadSuccess({ numPages }: { numPages: number }) {
        setNumPages(numPages);
    }
    return (
        <div className={styles.container}>
            <Head>
                <title>Guidance App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>Work station 1</h1>
                {/* <p>message: {message}</p> */}
                <p className={styles.description}>Tasks</p>
                {message.map((element, index) => (
                    <div className={styles.grid} key={index}>
                        <h2 className={styles.card}> {element}</h2>
                    </div>
                ))}
                <p className={styles.description}>Resources</p>
                {resource.map((element, index) =>
                    // if not ending in pdf
                    !element.endsWith('.pdf') ? (
                        <>
                            <Image
                                key={index}
                                alt="Mountains"
                                src={element}
                                width={300}
                                height={175}
                                // sizes="50vw"
                                style={{
                                    width: '100%',
                                    height: 'auto',
                                }}
                            />
                        </>
                    ) : (
                        <div
                            key={index}
                            className="Example__container__document"
                        >
                            <Document file={element}>
                                <Page pageNumber={pageNumber} />
                            </Document>
                        </div>
                    )
                )}
            </main>
        </div>
    );
};

export default Home;
